name: Build and Upload Genesis
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
#   cancel-in-progress: true

# concurrency:
#   group: ${{ github.ref }}-${{ github.workflow }}
#   cancel-in-progress: true

env:
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

jobs:
  build:
    name: Build and upload Genesis
    strategy:
      fail-fast: false
      matrix:
        target:
          - Genesis-Release
          - GenesisTV-Release
          - "Genesis-XL Release"
          - Genesis-UnderDevelopment
        include:
          - target: Genesis-Release
            sdk: iphoneos
            scheme: Genesis-Release
            APP_NAME: Genesis
            IPA_NAME: Genesis
          - target: GenesisTV-Release
            sdk: appletvos
            scheme: GenesisTV-Release
            APP_NAME: Genesis
            IPA_NAME: GenesisTV
          - target: "Genesis-XL Release"
            sdk: iphoneos
            scheme: "Genesis-XL Release"
            APP_NAME: Genesis-XL
            IPA_NAME: Genesis-XL
          - target: Genesis-UnderDevelopment
            sdk: iphoneos
            scheme: Genesis-UnderDevelopment
            APP_NAME: Genesis-UnderDevelopment
            IPA_NAME: Genesis-UnderDevelopment
          # - target: macOS
          #   sdk: macosx
          #   scheme: Genesis

    runs-on: 'macos-12'
    timeout-minutes: 300
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # - name: Install Xcode
      #   uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: ${{ matrix.version }}

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: '14.1'
          # xcode-select-path: /Applications/Xcode_${{ matrix.version }}.app/Contents/Developer

      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

      - name: Install dependencies
        run: brew install ldid

      - name: Build Genesis
        run: |
          xcodebuild -configuration Release -workspace Genesis.xcworkspace -scheme "${{ matrix.scheme }}" -sdk ${{ matrix.sdk }} archive -archivePath ./archive CODE_SIGNING_REQUIRED=NO AD_HOC_CODE_SIGNING_ALLOWED=YES CODE_SIGNING_ALLOWED=NO DEVELOPMENT_TEAM=S32Z3HMYVQ ORG_IDENTIFIER=org.Genesis-emu | xcpretty && exit ${PIPESTATUS[0]}

      # - name: Build Genesis
      #   run: |
      #     rm -rf ~/Library/Developer/Xcode/DerivedData/
      #     rm ./Genesis.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
      #     rm ./Genesis.xcworkspace/xcshareddata/swiftpm/Package.resolved
      #     xcodebuild -workspace Genesis.xcworkspace -scheme Genesis-Release -sdk iphoneos archive -archivePath ./archive CODE_SIGNING_REQUIRED=NO AD_HOC_CODE_SIGNING_ALLOWED=YES CODE_SIGNING_ALLOWED=NO DEVELOPMENT_TEAM=XYZ0123456 ORG_IDENTIFIER=org.Genesis-emu | xcpretty && exit ${PIPESTATUS[0]}

      - name: Fakesign app
        run: |
          #rm -rf archive.xcarchive/Products/Applications/${{ matrix.APP_NAME }}.app/Frameworks/*.framework/Frameworks/
          ldid -SGenesis/Genesis.entitlements archive.xcarchive/Products/Applications/${{ matrix.APP_NAME }}.app/${{ matrix.APP_NAME }}

      - name: Convert to IPA
        run: |
          mkdir Payload
          cp -pR "archive.xcarchive/Products/Applications/${{ matrix.APP_NAME }}.app" "Payload/${{ matrix.IPA_NAME }}.app"
          zip -r "${{ matrix.IPA_NAME }}.ipa" Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: "${{ matrix.IPA_NAME }}.ipa"
          path: "${{ matrix.IPA_NAME }}.ipa"
